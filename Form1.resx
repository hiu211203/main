<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="panelTheme.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAoHBwkHBgoJCAkLCwoMDxkQDw4ODx4WFxIZJCAmJSMgIyIo
        LTkwKCo2KyIjMkQyNjs9QEBAJjBGS0U+Sjk/QD3/2wBDAQsLCw8NDx0QEB09KSMpPT09PT09PT09PT09
        PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT3/wAARCAC0AFEDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwC+G96kD1T8ynCSvp7H0jZdElPEnvVESU8S1LRjJl4PkdahuJeN
        o/GohLULyZJPrSSOaUhk2GBDcg9qybmLyjlfun9K0XbNV5V3qVPQ1pHQzbM1jTCaG4JB6imE10JHDOYu
        aKbminYy5zb8yneZVPzBS+ZWVj6GUi4JaeJapCT3p4kqeU5pzLgl4NML5qAScUu6lY5nMeTUZoJprOFB
        Y9AM0WJ5jNn/ANc/+8aiJpWYkknqabXSkeZOd3cKKKKZnzlnfShqhJpQ1RY9+VVE4anq9Vw1PU0WOWdU
        tK1ODVApqUVLRyurqSZqpezceUvXq1STziFOOXPQf1rPJJJJ5JpwjrcipVsrIKMUoFLitThlMbiinYoo
        I5hA1KR3FRKamSrcTulWaEFSrRs7jpUkaFmCqpLMcAAZJqWjGde49BV6DTrq6tZJreLcFGVzxvPoPWtL
        TfD+MS3w+kIP/oR/pW8oAAAGAOABXHVxCWkThqYpp+6eZuzM5LE7u+aAK7TWvDaaiWuLUrHcn7wP3ZPr
        6H3rkbi2ms5jFcxNFIP4WHX6ev4VvSqxqLTc0jXVRaEYFOApBTxWhDkJtop1FInmKidasRqahysQy5/D
        vQZ3bhfkH61u0bSmXlZV4J5rf0G5sYomLAR3Hdjklh7en0rlEarcMhVgynBHSs6lJTjynJUbZ241C2P8
        Z/75NSJeQN0kH4g1gW0wnjDDr0I9DVuPpXnSoJHOzdikR/uup+hp89pBdxeXcwpKn91xmsZMVbhmkTG1
        zj0Nc8qTWqZN7FW48GWEpJgkntz6A7h+R5/WqjeB5R/q79CP9qE/410UV5n76/iKtI6uMqc1P1itDqWq
        su5yf/CEy/8AP7H/AN+zRXW0VP1ut3H7SR4wBzk8n1qQGoxT1r6Q62yZDU8ZqstTIeakykadjP5Uoyfl
        bg1tIa5uM1t2kpkt0YnnGDXPXh1OeSNKM1YQ9Koo9WEeuGcTNl1DUyNjmqiNUytXPKJBZ8w/3jRUO6is
        +Ud2eVCnimgU4CvpT0mPWpU61GoqVaVjNk6Vqae37kj0astK0bI4iP1rKqvdMmjRV8VOj1SDVKr1xyiZ
        uJoI9WEfNZySVYSTFc8oENFzdRVbzaKz5BWPPcU4ClC04CvfseiwAqVBzTVFSoKCGSIKuw/LGBVVFqwr
        VjPUhK5aV6kVqqq1SK9YOJLRbV6njk96pK1SK9ZyiQ4lzf70VV30VnyE2OXCU8JUgSpFjr1HI7GyNY6m
        VAKXaEGWOBUbSbuBwKm7ZCTlsP3DPFPVqgBp4NJoq1iwGqRWqsGqRWqGiWiyrVIrVWVqkVqzcSGifdRU
        W6ipsTYp7QoycADuahe6ReIxuPqelUnleQ5di31oBrsVPudSpfzExkZzljk0uaiBp4NVYuxIDTgajBpw
        NSyGSg08GogaepqGjNkwNSK1QA1IDUNEMl3UVHmipsSYuaUU0U4V22PRaHinU0U6kQxwp4pgp4qWZMcK
        epqMU8VDIZIDUimogaeDUNGTJM0UzNFTYkysUooorsPTHCnCiipZnIcKcKKKgyY8U4UUVLM2OFOFFFSZ
        sWiiikI//9k=
</value>
  </data>
</root>